#
# CMakeIt - a collection of CMake modules to build programs from 'Visual Studio'-like 
# projects, and well-structure project layouts (public and private include folders,
# source folders), using CMake build system. Also features pre compiled headers
# support, unit tests, installation ('make install' style), packaging, etc.
#
# Copyright (C) 2013, Fornazin & Fornazin Consultoria em Inform√°tica Ltda
#
# This library is free software; you can redistribute it and/or modify it under the
# terms of the GNU Lesser General Public License as published by the Free Software 
# Foundation; either version 3 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful, but WITHOUT ANY 
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
# PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License along 
# with this library; if not, please write to the Free Software Foundation, Inc., 
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#

#
# cmakeit_constants.cmake - 'constant' definitions used in CMakeIt build system
#

#
# CMAKEIT_GLOB_EXCLUSION_PREFIX_LIST - list of ignored prefixes
#
unset(CMAKEIT_GLOB_EXCLUSION_PREFIX_LIST)

list(APPEND CMAKEIT_GLOB_EXCLUSION_PREFIX_LIST ".vs")
list(APPEND CMAKEIT_GLOB_EXCLUSION_PREFIX_LIST ".vscode")
list(APPEND CMAKEIT_GLOB_EXCLUSION_PREFIX_LIST ".tf")
list(APPEND CMAKEIT_GLOB_EXCLUSION_PREFIX_LIST ".svn")
list(APPEND CMAKEIT_GLOB_EXCLUSION_PREFIX_LIST ".git")
list(APPEND CMAKEIT_GLOB_EXCLUSION_PREFIX_LIST ".gitmodule")
list(APPEND CMAKEIT_GLOB_EXCLUSION_PREFIX_LIST ".gitmodules")
list(APPEND CMAKEIT_GLOB_EXCLUSION_PREFIX_LIST ".gitsubmodule")
list(APPEND CMAKEIT_GLOB_EXCLUSION_PREFIX_LIST ".gitsubmodules")
list(APPEND CMAKEIT_GLOB_EXCLUSION_PREFIX_LIST ".build")
list(APPEND CMAKEIT_GLOB_EXCLUSION_PREFIX_LIST ".output")
list(APPEND CMAKEIT_GLOB_EXCLUSION_PREFIX_LIST "CVS")
list(APPEND CMAKEIT_GLOB_EXCLUSION_PREFIX_LIST "SVN")
list(APPEND CMAKEIT_GLOB_EXCLUSION_PREFIX_LIST "3rd")
list(APPEND CMAKEIT_GLOB_EXCLUSION_PREFIX_LIST "bin")
list(APPEND CMAKEIT_GLOB_EXCLUSION_PREFIX_LIST "obj")
list(APPEND CMAKEIT_GLOB_EXCLUSION_PREFIX_LIST "build")
list(APPEND CMAKEIT_GLOB_EXCLUSION_PREFIX_LIST "CMakeIt")
list(APPEND CMAKEIT_GLOB_EXCLUSION_PREFIX_LIST "Debug")
list(APPEND CMAKEIT_GLOB_EXCLUSION_PREFIX_LIST "Release")

#
# CMAKEIT_GLOB_EXCLUSION_SUFFIX_LIST - list of ignored suffixes
#
unset(CMAKEIT_GLOB_EXCLUSION_SUFFIX_LIST)

list(APPEND CMAKEIT_GLOB_EXCLUSION_SUFFIX_LIST ".bak")
list(APPEND CMAKEIT_GLOB_EXCLUSION_SUFFIX_LIST ".tmp")

#
# CMAKEIT_GLOB_CXX_HEADER_SUFFIX_LIST - List of allowed C++ extension of header / inline files
#
unset(CMAKEIT_GLOB_CXX_HEADER_SUFFIX_LIST)

list(APPEND CMAKEIT_GLOB_CXX_HEADER_SUFFIX_LIST ".hpp")
list(APPEND CMAKEIT_GLOB_CXX_HEADER_SUFFIX_LIST ".hxx")
list(APPEND CMAKEIT_GLOB_CXX_HEADER_SUFFIX_LIST ".hh")
list(APPEND CMAKEIT_GLOB_CXX_HEADER_SUFFIX_LIST ".ipp")
list(APPEND CMAKEIT_GLOB_CXX_HEADER_SUFFIX_LIST ".ixx")
list(APPEND CMAKEIT_GLOB_CXX_HEADER_SUFFIX_LIST ".ii")

#
# CMAKEIT_GLOB_C_HEADER_SUFFIX_LIST - List of allowed C extension of header / inline files
#
unset(CMAKEIT_GLOB_C_HEADER_SUFFIX_LIST)

list(APPEND CMAKEIT_GLOB_C_HEADER_SUFFIX_LIST ".h")
list(APPEND CMAKEIT_GLOB_C_HEADER_SUFFIX_LIST ".i")
list(APPEND CMAKEIT_GLOB_C_HEADER_SUFFIX_LIST ".inl")

#
# CMAKEIT_GLOB_HEADER_SUFFIX_LIST - List of allowed extension of header / inline files
#
unset(CMAKEIT_GLOB_HEADER_SUFFIX_LIST)

foreach(INTERNAL_CMAKEIT_GLOB_CXX_HEADER_SUFFIX ${CMAKEIT_GLOB_CXX_HEADER_SUFFIX_LIST})
	list(APPEND CMAKEIT_GLOB_HEADER_SUFFIX_LIST ${INTERNAL_CMAKEIT_GLOB_CXX_HEADER_SUFFIX})
endforeach()

foreach(INTERNAL_CMAKEIT_GLOB_C_HEADER_SUFFIX ${CMAKEIT_GLOB_C_HEADER_SUFFIX_LIST})
	list(APPEND CMAKEIT_GLOB_HEADER_SUFFIX_LIST ${INTERNAL_CMAKEIT_GLOB_C_HEADER_SUFFIX})
endforeach()

unset(INTERNAL_CMAKEIT_GLOB_CXX_HEADER_SUFFIX)
unset(INTERNAL_CMAKEIT_GLOB_C_HEADER_SUFFIX)

#
# CMAKEIT_GLOB_CXX_SOURCE_SUFFIX_LIST - list of allowed C++ extension of source files
#
unset(CMAKEIT_GLOB_CXX_SOURCE_SUFFIX_LIST)

list(APPEND CMAKEIT_GLOB_CXX_SOURCE_SUFFIX_LIST ".cpp")
list(APPEND CMAKEIT_GLOB_CXX_SOURCE_SUFFIX_LIST ".cxx")
list(APPEND CMAKEIT_GLOB_CXX_SOURCE_SUFFIX_LIST ".cc")

#
# CMAKEIT_GLOB_C_SOURCE_SUFFIX_LIST - list of allowed C extension of source files
#
unset(CMAKEIT_GLOB_C_SOURCE_SUFFIX_LIST)

list(APPEND CMAKEIT_GLOB_C_SOURCE_SUFFIX_LIST ".c")

#
# CMAKEIT_GLOB_SOURCE_SUFFIX_LIST - list of allowed extension of source files
#
unset(CMAKEIT_GLOB_SOURCE_SUFFIX_LIST)

foreach(INTERNAL_CMAKEIT_GLOB_CXX_SOURCE_SUFFIX ${CMAKEIT_GLOB_CXX_SOURCE_SUFFIX_LIST})
	list(APPEND CMAKEIT_GLOB_SOURCE_SUFFIX_LIST ${INTERNAL_CMAKEIT_GLOB_CXX_SOURCE_SUFFIX})
endforeach()

foreach(INTERNAL_CMAKEIT_GLOB_C_SOURCE_SUFFIX ${CMAKEIT_GLOB_C_SOURCE_SUFFIX_LIST})
	list(APPEND CMAKEIT_GLOB_SOURCE_SUFFIX_LIST ${INTERNAL_CMAKEIT_GLOB_C_SOURCE_SUFFIX})
endforeach()

unset(INTERNAL_CMAKEIT_GLOB_CXX_SOURCE_SUFFIX)
unset(INTERNAL_CMAKEIT_GLOB_C_SOURCE_SUFFIX)

#
# CMAKEIT_GLOB_RESOURCE_SUFFIX_LIST - list of allowed extension of resource files
#
unset(CMAKEIT_GLOB_RESOURCE_SUFFIX_LIST)

list(APPEND CMAKEIT_GLOB_RESOURCE_SUFFIX_LIST ".rc")

#
# CMAKEIT_TOOLSET_* 'constants'
#
set(CMAKEIT_TOOLSET_UNSPECIFIED "Unspecified")
set(CMAKEIT_TOOLSET_GNU "GNU")
set(CMAKEIT_TOOLSET_MICROSOFT "Microsoft")
set(CMAKEIT_TOOLSET_LLVM "LLVM")

#
# CMAKEIT_COMPILER_* 'constants'
#
set(CMAKEIT_COMPILER_UNSPECIFIED "Unspecified")
set(CMAKEIT_COMPILER_GCC "GCC")
set(CMAKEIT_COMPILER_VISUAL_C "VisualC++")
set(CMAKEIT_COMPILER_CLANG "CLang")

#
# CMAKEIT_COMPILER_PCH_SUFFIX_* 'constants'
#
set(CMAKEIT_COMPILER_PCH_SUFFIX_GCC "gch")
set(CMAKEIT_COMPILER_PCH_SUFFIX_VISUAL_C "pch")
set(CMAKEIT_COMPILER_PCH_SUFFIX_CLANG "gch")

#
# CMAKEIT_TARGET_PLATFORM_* 'constants'
#
set(CMAKEIT_TARGET_PLATFORM_WINDOWS "Windows")
set(CMAKEIT_TARGET_PLATFORM_UNIX "Unix")
set(CMAKEIT_TARGET_PLATFORM_WEBASSEMBLY "WebAssembly")
set(CMAKEIT_TARGET_PLATFORM_UNSPECIFIED "Unspecified")

#
# CMAKEIT_TARGET_PLATFORM_VARIANT_* 'constants'
#
set(CMAKEIT_TARGET_PLATFORM_VARIANT_WINDOWS_WINDOWS_API "WindowsAPI")
set(CMAKEIT_TARGET_PLATFORM_VARIANT_WINDOWS_UWP "UniversalWindowsPlatform")
set(CMAKEIT_TARGET_PLATFORM_VARIANT_WINDOWS_CYGWIN "Cygwin")
set(CMAKEIT_TARGET_PLATFORM_VARIANT_UNIX_APPLE_MACOS "macOS")
set(CMAKEIT_TARGET_PLATFORM_VARIANT_UNIX_APPLE_IOS "iOS")
set(CMAKEIT_TARGET_PLATFORM_VARIANT_UNIX_APPLE_IOS_SIMULATOR "iOSSimulator")
set(CMAKEIT_TARGET_PLATFORM_VARIANT_UNIX_APPLE_TVOS "tvOS")
set(CMAKEIT_TARGET_PLATFORM_VARIANT_UNIX_APPLE_TVOS_SIMULATOR "tvOSSimulator")
set(CMAKEIT_TARGET_PLATFORM_VARIANT_UNIX_APPLE_WATCHOS "watchOS")
set(CMAKEIT_TARGET_PLATFORM_VARIANT_UNIX_APPLE_WATCHOS_SIMULATOR "watchOSSimulator")
set(CMAKEIT_TARGET_PLATFORM_VARIANT_UNIX_ANDROID "Android")
set(CMAKEIT_TARGET_PLATFORM_VARIANT_UNIX_LINUX "Linux")
set(CMAKEIT_TARGET_PLATFORM_VARIANT_UNIX_BSD "BSD")
set(CMAKEIT_TARGET_PLATFORM_VARIANT_UNIX_SUNOS "SunOS")
set(CMAKEIT_TARGET_PLATFORM_VARIANT_UNIX_QNX "QNX")
set(CMAKEIT_TARGET_PLATFORM_VARIANT_WEBASSEMBLY_BROWSER "WebAssembly")
set(CMAKEIT_TARGET_PLATFORM_VARIANT_UNSPECIFIED "Unspecified")

#
# CMAKEIT_TARGET_ARCHITECTURE_* 'constants'
#
set(CMAKEIT_TARGET_ARCHITECTURE_INTEL_X86 "x86")
set(CMAKEIT_TARGET_ARCHITECTURE_INTEL_X64 "x64")
set(CMAKEIT_TARGET_ARCHITECTURE_ARM "ARM")
set(CMAKEIT_TARGET_ARCHITECTURE_ARM64 "ARM64")
set(CMAKEIT_TARGET_ARCHITECTURE_WEBASSEMBLY "WASM")
set(CMAKEIT_TARGET_ARCHITECTURE_UNSPECIFIED "Unspecified")

#
# CMAKEIT_BUILD_TYPE_* 'constants'
#
set(CMAKEIT_BUILD_TYPE_DEBUG "Debug")
set(CMAKEIT_BUILD_TYPE_MINSIZEREL "MinSizeRel")
set(CMAKEIT_BUILD_TYPE_RELWITHDEBINFO "RelWithDebInfo")
set(CMAKEIT_BUILD_TYPE_RELEASE "Release")

#
# CMAKEIT_MODULE_TYPE_* 'constants'
#
set(CMAKEIT_MODULE_TYPE_APPLICATION "Application")
set(CMAKEIT_MODULE_TYPE_LIBRARY "Library")

#
# CMAKEIT_MODULE_SUBTYPE_* 'constants'
#
set(CMAKEIT_MODULE_SUBTYPE_UI "UI")
set(CMAKEIT_MODULE_SUBTYPE_CONSOLE "Console")
set(CMAKEIT_MODULE_SUBTYPE_STATIC "Static")
set(CMAKEIT_MODULE_SUBTYPE_SHARED "Shared")

#
# CMAKEIT_SOURCES_LAYOUT_* 'constants'
#
set(CMAKEIT_SOURCES_LAYOUT_PRIVATE_PUBLIC_HEADER_AND_SOURCE_DIRECTORIES "/include/(private/public),/src")
set(CMAKEIT_SOURCES_LAYOUT_PUBLIC_HEADER_AND_SOURCE_DIRECTORIES "/include,/src")
set(CMAKEIT_SOURCES_LAYOUT_PUBLIC_HEADER_DIRECTORY "/include")
set(CMAKEIT_SOURCES_LAYOUT_PUBLIC_SOURCE_DIRECTORY "/src")
set(CMAKEIT_SOURCES_LAYOUT_ENTIRE_DIRECTORY "")

#
# CMAKEIT_BUILD_NUMBER_* 'constants'
#
set(CMAKEIT_BUILD_NUMBER_FILENAME ".cmakeit_buildnumber")

#
# CMAKEIT_CONFIGURE_ACTION_* 'constants'
#
set(CMAKEIT_CONFIGURE_ACTION_CONFIGURE_FILE "ConfigureFile")
set(CMAKEIT_CONFIGURE_ACTION_COPY_ONLY "CopyOnly")

#
# CMAKEIT_C_STANDARD_* 'constants'
#
set(CMAKEIT_COMPILER_C_STANDARD_18 "3__C18")
set(CMAKEIT_COMPILER_C_STANDARD_11 "2__C11")
set(CMAKEIT_COMPILER_C_STANDARD_99 "1__C99")
set(CMAKEIT_COMPILER_C_STANDARD_90 "0__C90")

#
# CMAKEIT_CXX_STANDARD_* 'constants'
#
set(CMAKEIT_COMPILER_CXX_STANDARD_2A "7__C++2A")
set(CMAKEIT_COMPILER_CXX_STANDARD_17 "6__C++17")
set(CMAKEIT_COMPILER_CXX_STANDARD_1Z "5__C++1z")
set(CMAKEIT_COMPILER_CXX_STANDARD_14 "4__C++14")
set(CMAKEIT_COMPILER_CXX_STANDARD_1Y "3__C++1y")
set(CMAKEIT_COMPILER_CXX_STANDARD_11 "2__C++11")
set(CMAKEIT_COMPILER_CXX_STANDARD_0X "1__C++0x")
set(CMAKEIT_COMPILER_CXX_STANDARD_98 "0__C++98")